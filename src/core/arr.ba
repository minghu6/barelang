

struct MemBuf<T> {
    cap: usize,
    ptr: T*
}


f: indexof<T>(buf: MemBuf<T>, idx: usize): T {
    *(buf.ptr + idx)
}


struct Array<T> {
    len: usize,
    buf: MemBuf<T>*
}

// generated by compiler
// f: sizeof(arr: Array<T>): usize {
// }

f: indexof<T>(arr: Array<T>, idx: usize): T {
    arr->buf[idx]
}

